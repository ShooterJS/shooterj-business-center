server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 100
      min-spare: 10
  servlet:
    encoding:
      force: true
      charset: UTF-8
      enabled: true

logging:
  config: classpath:log4j2.xml

spring:
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  mvc:
    converters:
      preferred-json-mapper: fastjson
  freemarker:
    template-loader-path: classpath:/template/
    cache: false
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: false
    expose-session-attributes: false
    request-context-attribute: request
    suffix: .ftl
  cloud:
    sentinel:
      transport:
        # sentinel控制台地址。
        # 由于8080端口容易与其他服务端口冲突，可以在启动sentinel控制台时动态修改，如：
        # java -Dserver.port=8858 -jar sentinel-dashboard-$VERSION.jar
        # 改为8858后，下面的配置端口也需要改为：localhost:8858。
        dashboard: localhost:8858

# feign 配置
feign:
  sentinel:
    enabled: true
  httpclient:
    enabled: true
    max-connections: 200
    max-connections-per-route: 50
  client:
    config:
      default:
        # 输出feignclient的日志，缺省值为none，可选值为none/basic/headers/full
        # 注意：需要把feignclient类所在包的日志级别设置为debug时才生效。如：
        # logging:
        #   level:
        #     com.demo.multi: info
        #     com.demo.multi.coursepaperinterface.client: debug
        loggerLevel: full
        connectTimeout: 5000
        readTimeout: 10000
  compression:
    request:
      enabled: true
    response:
      enabled: true

common-core:
  # 可选值为 mysql / postgresql
  databaseType: mysql

swagger:
  # 当enabled为false的时候，则可禁用swagger。
  enabled: true
  # 工程的基础包名。
  basePackage: com.orangeforms
  # 工程服务的基础包名。
  serviceBasePackage:
  title: 橙单单体服务工程
  description: 橙单单体服务工程详情
  version: 1.0

# 暴露监控端点
management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: '*'
    jmx:
      exposure:
        include: '*'
  endpoint:
    # 与中间件相关的健康详情也会被展示
    health:
      show-details: always
    configprops:
      # 在/actuator/configprops中，所有包含password的配置，将用 * 隐藏。
      # 如果不想隐藏任何配置项的值，可以直接使用如下被注释的空值。
      # keys-to-sanitize:
      keys-to-sanitize: password
  server:
    base-path: "/"

# 存储session数据的Redis，所有服务均需要，因此放到公共配置中。
# 根据实际情况，该Redis也可以用于存储其他数据。
redis:
  # redisson的配置。每个服务可以自己的配置文件中覆盖此选项。
  redisson:
    # 如果该值为false，系统将不会创建RedissionClient的bean。
    enabled: true
    # mode的可用值为，single/cluster/sentinel/master-slave
    mode: single
    # single: 单机模式
    #   address: redis://localhost:6379
    # cluster: 集群模式
    #   每个节点逗号分隔，同时每个节点前必须以redis://开头。
    #   address: redis://localhost:6379,redis://localhost:6378,...
    # sentinel:
    #   每个节点逗号分隔，同时每个节点前必须以redis://开头。
    #   address: redis://localhost:6379,redis://localhost:6378,...
    # master-slave:
    #   每个节点逗号分隔，第一个为主节点，其余为从节点。同时每个节点前必须以redis://开头。
    #   address: redis://localhost:6379,redis://localhost:6378,...
    address: redis://localhost:6379
    # 链接超时，单位毫秒。
    timeout: 6000
    # 单位毫秒。分布式锁的超时检测时长。
    # 如果一次锁内操作超该毫秒数，或在释放锁之前异常退出，Redis会在该时长之后主动删除该锁使用的key。
    lockWatchdogTimeout: 60000
    # redis 密码，空可以不填。
    password:
    pool:
      # 连接池数量。
      poolSize: 20
      # 连接池中最小空闲数量。
      minIdle: 5
